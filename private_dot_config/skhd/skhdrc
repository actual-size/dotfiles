# Float the next window on command-comma
cmd - 0x2B -> : \
    yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".floating == 0" && yabai -m window $YABAI_WINDOW_ID --toggle float' && \
    yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r ".[] | select(.pid == $YABAI_PROCESS_ID && .floating == 0).id" | xargs -I{} yabai -m window {} --toggle float'; yabai -m window --grid 4:4:1:1:2:2

# CMD - <Enter> to open kitty
cmd - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~

# create desktop, move window and follow focus
# fn - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}" && \
#                   yabai -m window --focus mouse

# window movement
fn - h : yabai -m window --focus west
fn - j : yabai -m window --focus south
fn - k : yabai -m window --focus north
fn - l : yabai -m window --focus east

# window warping
fn + alt - h : yabai -m window --warp west
fn + alt - j : yabai -m window --warp south
fn + alt - k : yabai -m window --warp north
fn + alt - l : yabai -m window --warp east

# window swapping
fn + cmd - h : yabai -m window --swap west
fn + cmd - j : yabai -m window --swap south
fn + cmd - k : yabai -m window --swap north
fn + cmd - l : yabai -m window --swap east

# switch spaces
fn - n : yabai -m space --focus next || yabai -m space --focus first
fn - p : yabai -m space --focus prev || yabai -m space --focus last
